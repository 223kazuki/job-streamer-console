var Blockly = {
    "Blocks": {
        "uidCounter_": {},
        "genUid": function () {}
    },
    "Workspace": {
        "SCAN_ANGLE": {}
    },
    "Bubble": {
        "BORDER_WIDTH": {},
        "ARROW_THICKNESS": {},
        "ARROW_ANGLE": {},
        "ARROW_BEND": {},
        "ANCHOR_RADIUS": {},
        "onMouseUpWrapper_": {},
        "onMouseMoveWrapper_": {},
        "unbindDragEvents_": function () {}
    },
    "Icon": function () {},
    "Comment": {
        "superClass_": {},
        "base": function () {}
    },
    "Connection": {
        "singleConnection_": function () {}
    },
    "ConnectionDB": {
        "constructor": function () {},
        "init": function () {}
    },
    "Field": {
        "NBSP": {}
    },
    "Tooltip": {
        "visible": {},
        "LIMIT": {},
        "mouseOutPid_": {},
        "showPid_": {},
        "lastX_": {},
        "lastY_": {},
        "element_": {},
        "poisonedElement_": {},
        "OFFSET_X": {},
        "OFFSET_Y": {},
        "RADIUS_OK": {},
        "HOVER_MS": {},
        "MARGINS": {},
        "DIV": {},
        "createDom": function () {},
        "bindMouseEvents": function () {},
        "onMouseOver_": function () {},
        "onMouseOut_": function () {},
        "onMouseMove_": function () {},
        "hide": function () {},
        "show_": function () {},
        "wrap_": function () {},
        "wrapScore_": function () {},
        "wrapMutate_": function () {},
        "wrapToText_": function () {}
    },
    "FieldLabel": {
        "superClass_": {},
        "base": function () {}
    },
    "Input": function () {},
    "ScrollbarPair": function () {},
    "Scrollbar": {
        "scrollbarThickness": {},
        "insertAfter_": function () {}
    },
    "Trashcan": function () {},
    "Xml": {
        "workspaceToDom": function () {},
        "blockToDom_": function () {},
        "domToText": function () {},
        "domToPrettyText": function () {},
        "textToDom": function () {},
        "domToWorkspace": function () {},
        "domToBlock": function () {},
        "domToBlockHeadless_": function () {},
        "deleteNext": function () {}
    },
    "WorkspaceSvg": {
        "superClass_": {},
        "base": function () {}
    },
    "Mutator": {
        "superClass_": {},
        "base": function () {}
    },
    "Warning": {
        "superClass_": {},
        "base": function () {},
        "textToDom_": function () {}
    },
    "Block": {
        "obtain": function () {},
        "getById": function () {}
    },
    "ContextMenu": {
        "currentBlock": {},
        "show": function () {},
        "hide": function () {},
        "callbackFactory": function () {}
    },
    "BlockSvg": {
        "superClass_": {},
        "base": function () {},
        "INLINE": {},
        "onMouseUpWrapper_": {},
        "onMouseMoveWrapper_": {},
        "terminateDrag_": function () {},
        "SEP_SPACE_X": {},
        "SEP_SPACE_Y": {},
        "INLINE_PADDING_Y": {},
        "MIN_BLOCK_Y": {},
        "TAB_HEIGHT": {},
        "TAB_WIDTH": {},
        "NOTCH_WIDTH": {},
        "CORNER_RADIUS": {},
        "FIELD_HEIGHT": {},
        "DISTANCE_45_INSIDE": {},
        "DISTANCE_45_OUTSIDE": {},
        "NOTCH_PATH_LEFT": {},
        "NOTCH_PATH_LEFT_HIGHLIGHT": {},
        "NOTCH_PATH_RIGHT": {},
        "JAGGED_TEETH": {},
        "JAGGED_TEETH_HEIGHT": {},
        "JAGGED_TEETH_WIDTH": {},
        "TAB_PATH_DOWN": {},
        "TAB_PATH_DOWN_HIGHLIGHT_RTL": {},
        "TOP_LEFT_CORNER_START": {},
        "TOP_LEFT_CORNER_START_HIGHLIGHT_RTL": {},
        "TOP_LEFT_CORNER_START_HIGHLIGHT_LTR": {},
        "TOP_LEFT_CORNER": {},
        "TOP_LEFT_CORNER_HIGHLIGHT": {},
        "INNER_TOP_LEFT_CORNER": {},
        "INNER_BOTTOM_LEFT_CORNER": {},
        "INNER_TOP_LEFT_CORNER_HIGHLIGHT_RTL": {},
        "INNER_BOTTOM_LEFT_CORNER_HIGHLIGHT_RTL": {},
        "INNER_BOTTOM_LEFT_CORNER_HIGHLIGHT_LTR": {},
        "disposeUiStep_": function () {},
        "connectionUiStep_": function () {}
    },
    "Msg": {},
    "FieldTextInput": {
        "superClass_": {},
        "base": function () {},
        "numberValidator": function () {},
        "nonnegativeIntegerValidator": function () {}
    },
    "FieldAngle": {
        "superClass_": {},
        "base": function () {},
        "ROUND": {},
        "HALF": {},
        "RADIUS": {},
        "angleValidator": function () {}
    },
    "FieldCheckbox": {
        "superClass_": {},
        "base": function () {}
    },
    "FieldColour": {
        "superClass_": {},
        "base": function () {},
        "COLOURS": {},
        "COLUMNS": {},
        "widgetDispose_": function () {}
    },
    "FieldDropdown": {
        "superClass_": {},
        "base": function () {},
        "CHECKMARK_OVERHANG": {},
        "ARROW_CHAR": {}
    },
    "FieldImage": {
        "superClass_": {},
        "base": function () {}
    },
    "Variables": {
        "NAME_TYPE": {},
        "allVariables": function () {},
        "renameVariable": function () {},
        "flyoutCategory": function () {},
        "generateUniqueName": function () {}
    },
    "FieldVariable": {
        "superClass_": {},
        "base": function () {},
        "dropdownCreate": function () {},
        "dropdownChange": function () {}
    },
    "Generator": {
        "NAME_TYPE": {}
    },
    "Names": {
        "equals": function () {}
    },
    "Procedures": {
        "NAME_TYPE": {},
        "allProcedures": function () {},
        "procTupleComparator_": function () {},
        "findLegalName": function () {},
        "isLegalName": function () {},
        "rename": function () {},
        "flyoutCategory": function () {},
        "getCallers": function () {},
        "disposeCallers": function () {},
        "mutateCallers": function () {},
        "getDefinition": function () {}
    },
    "Realtime": {
        "enabled_": {},
        "document_": {},
        "model_": {},
        "sessionId_": {},
        "initUi_": {},
        "blocksMap_": {},
        "withinSync": {},
        "realtimeLoader_": {},
        "chatBoxElementId_": {},
        "chatBoxInitialText_": {},
        "withinUndo_": {},
        "isEnabled": function () {},
        "undoElementId_": {},
        "redoElementId_": {},
        "PROGRESS_URL_": {},
        "ANONYMOUS_URL_": {},
        "initializeModel_": function () {},
        "removeBlock": function () {},
        "addTopBlock": function () {},
        "removeTopBlock": function () {},
        "obtainBlock": function () {},
        "getBlockById": function () {},
        "logEvent_": function () {},
        "onObjectChange_": function () {},
        "onBlocksMapChange_": function () {},
        "doWithinSync_": function () {},
        "placeBlockOnWorkspace_": function () {},
        "moveBlock_": function () {},
        "deleteBlock": function () {},
        "loadBlocks_": function () {},
        "blockChanged": function () {},
        "onFileLoaded_": function () {},
        "getSessionId_": function () {},
        "registerTypes_": function () {},
        "REAUTH_INTERVAL_IN_MILLISECONDS_": {},
        "afterAuth_": function () {},
        "afterCreate_": function () {},
        "getUserDomain": function () {},
        "rtclientOptions_": {
            "clientId": {},
            "authButtonElementId": {},
            "authDivElementId": {},
            "initializeModel": function () {},
            "autoCreate": {},
            "defaultTitle": {},
            "defaultFolderTitle": {},
            "newFileMimeType": {},
            "onFileLoaded": function () {},
            "registerTypes": function () {},
            "afterAuth": function () {},
            "afterCreate": function () {}
        },
        "parseOptions_": function () {},
        "startRealtime": function () {},
        "addAuthUi_": function () {},
        "updateCollabUi_": function () {},
        "onCollaboratorJoined_": function () {},
        "onCollaboratorLeft_": function () {},
        "doCommand": function () {},
        "genUid": function () {}
    },
    "Flyout": {
        "terminateDrag_": function () {}
    },
    "Toolbox": {
        "TreeControl": {
            "superClass_": {},
            "base": function () {}
        },
        "TreeNode": {
            "superClass_": {},
            "base": function () {}
        },
        "TreeSeparator": {
            "superClass_": {},
            "base": function () {},
            "CONFIG_": {
                "cssTreeRow": {}
            }
        }
    },
    "Css": {
        "Cursor": {
            "OPEN": {},
            "CLOSED": {},
            "DELETE": {}
        },
        "currentCursor_": {},
        "styleSheet_": {},
        "mediaPath_": {},
        "inject": function () {},
        "setCursor": function () {},
        "CONTENT": {}
    },
    "WidgetDiv": {
        "DIV": {},
        "owner_": {},
        "dispose_": {},
        "createDom": function () {},
        "show": function () {},
        "hide": function () {},
        "isVisible": function () {},
        "hideIfOwner": function () {},
        "position": function () {}
    },
    "inject": function () {},
    "parseToolboxTree_": function () {},
    "parseOptions_": function () {},
    "createDom_": function () {},
    "createMainWorkspace_": function () {},
    "init_": function () {},
    "updateToolbox": function () {},
    "utils": {},
    "addClass_": function () {},
    "removeClass_": function () {},
    "hasClass_": function () {},
    "bindEvent_": {
        "TOUCH_MAP": {}
    },
    "unbindEvent_": function () {},
    "fireUiEventNow": function () {},
    "fireUiEvent": {
        "DB_": {}
    },
    "noEvent": function () {},
    "isTargetInput_": function () {},
    "getRelativeXY_": function () {},
    "getSvgXY_": function () {},
    "createSvgElement": function () {},
    "removeAllRanges": function () {},
    "isRightButton": function () {},
    "mouseToSvg": function () {},
    "shortestStringLength": function () {},
    "commonWordPrefix": function () {},
    "commonWordSuffix": function () {},
    "isNumber": function () {},
    "tokenizeInterpolation": function () {},
    "SVG_NS": {},
    "HTML_NS": {},
    "HSV_SATURATION": {},
    "HSV_VALUE": {},
    "SPRITE": {
        "width": {},
        "height": {},
        "url": {}
    },
    "makeColour": function () {},
    "INPUT_VALUE": {},
    "OUTPUT_VALUE": {},
    "NEXT_STATEMENT": {},
    "PREVIOUS_STATEMENT": {},
    "DUMMY_INPUT": {},
    "ALIGN_LEFT": {},
    "ALIGN_CENTRE": {},
    "ALIGN_RIGHT": {},
    "OPPOSITE_TYPE": {},
    "selected": {},
    "highlightedConnection_": {},
    "localConnection_": {},
    "DRAG_RADIUS": {},
    "SNAP_RADIUS": {},
    "BUMP_DELAY": {},
    "COLLAPSE_CHARS": {},
    "LONGPRESS": {},
    "mainWorkspace": {},
    "clipboardXml_": {},
    "clipboardSource_": {},
    "dragMode_": {},
    "onTouchUpWrapper_": {},
    "svgSize": function () {},
    "svgResize": function () {},
    "onMouseUp_": function () {},
    "onMouseMove_": function () {},
    "onKeyDown_": function () {},
    "terminateDrag_": function () {},
    "longPid_": {},
    "longStart_": function () {},
    "longStop_": function () {},
    "copy_": function () {},
    "onContextMenu_": function () {},
    "hideChaff": function () {},
    "getMainWorkspaceMetrics_": function () {},
    "setMainWorkspaceMetrics_": function () {},
    "doCommand": function () {},
    "addChangeListener": function () {},
    "getMainWorkspace": function () {},
    "removeChangeListener": {}
};
Blockly.Workspace.prototype = {
    "rendered": function () {},
    "dispose": function () {},
    "addTopBlock": function () {},
    "removeTopBlock": function () {},
    "getTopBlocks": function () {},
    "getAllBlocks": function () {},
    "clear": function () {},
    "getWidth": function () {},
    "getBlockById": function () {},
    "remainingCapacity": function () {},
    "fireChangeEvent": function () {}
};
Blockly.Bubble.prototype = {
    "rendered_": function () {},
    "anchorX_": function () {},
    "anchorY_": function () {},
    "relativeLeft_": function () {},
    "relativeTop_": function () {},
    "width_": function () {},
    "height_": function () {},
    "autoLayout_": function () {},
    "createDom_": function () {},
    "bubbleMouseDown_": function () {},
    "bubbleMouseMove_": function () {},
    "resizeMouseDown_": function () {},
    "resizeMouseMove_": function () {},
    "registerResizeEvent": function () {},
    "promote_": function () {},
    "setAnchorLocation": function () {},
    "layoutBubble_": function () {},
    "positionBubble_": function () {},
    "getBubbleSize": function () {},
    "setBubbleSize": function () {},
    "renderArrow_": function () {},
    "setColour": function () {},
    "dispose": function () {}
};
Blockly.Icon.prototype = {
    "png_": function () {},
    "SIZE": function () {},
    "bubble_": function () {},
    "iconX_": function () {},
    "iconY_": function () {},
    "createIcon": function () {},
    "dispose": function () {},
    "updateEditable": function () {},
    "isVisible": function () {},
    "iconClick_": function () {},
    "updateColour": function () {},
    "renderIcon": function () {},
    "setIconLocation": function () {},
    "computeIconLocation": function () {},
    "getIconLocation": function () {}
};
Blockly.Comment.prototype = {
    "constructor": function () {},
    "png_": function () {},
    "text_": function () {},
    "width_": function () {},
    "height_": function () {},
    "createEditor_": function () {},
    "updateEditable": function () {},
    "resizeBubble_": function () {},
    "setVisible": function () {},
    "textareaFocus_": function () {},
    "getBubbleSize": function () {},
    "setBubbleSize": function () {},
    "getText": function () {},
    "setText": function () {},
    "dispose": function () {},
    "SIZE": function () {},
    "bubble_": function () {},
    "iconX_": function () {},
    "iconY_": function () {},
    "createIcon": function () {},
    "isVisible": function () {},
    "iconClick_": function () {},
    "updateColour": function () {},
    "renderIcon": function () {},
    "setIconLocation": function () {},
    "computeIconLocation": function () {},
    "getIconLocation": function () {}
};
Blockly.Connection.prototype = {
    "dispose": function () {},
    "isSuperior": function () {},
    "connect": function () {},
    "disconnect": function () {},
    "targetBlock": function () {},
    "bumpAwayFrom_": function () {},
    "moveTo": function () {},
    "moveBy": function () {},
    "highlight": function () {},
    "unhighlight": function () {},
    "tighten_": function () {},
    "closest": function () {},
    "checkType_": function () {},
    "setCheck": function () {},
    "neighbours_": function () {},
    "setHidden": function () {},
    "hideAll": function () {},
    "unhideAll": function () {}
};
Blockly.ConnectionDB.prototype = {
    "addConnection_": function () {},
    "removeConnection_": function () {}
};
Blockly.Field.prototype = {
    "sourceBlock_": function () {},
    "visible_": function () {},
    "changeHandler_": function () {},
    "clone": function () {},
    "EDITABLE": function () {},
    "init": function () {},
    "dispose": function () {},
    "updateEditable": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "setChangeHandler": function () {},
    "getSvgRoot": function () {},
    "render_": function () {},
    "getSize": function () {},
    "getText": function () {},
    "setText": function () {},
    "updateTextNode_": function () {},
    "getValue": function () {},
    "setValue": function () {},
    "onMouseUp_": function () {},
    "setTooltip": function () {},
    "getAbsoluteXY_": function () {}
};
Blockly.FieldLabel.prototype = {
    "constructor": function () {},
    "clone": function () {},
    "EDITABLE": function () {},
    "init": function () {},
    "dispose": function () {},
    "getSvgRoot": function () {},
    "setTooltip": function () {},
    "sourceBlock_": function () {},
    "visible_": function () {},
    "changeHandler_": function () {},
    "updateEditable": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "setChangeHandler": function () {},
    "render_": function () {},
    "getSize": function () {},
    "getText": function () {},
    "setText": function () {},
    "updateTextNode_": function () {},
    "getValue": function () {},
    "setValue": function () {},
    "onMouseUp_": function () {},
    "getAbsoluteXY_": function () {}
};
Blockly.Input.prototype = {
    "appendField": function () {},
    "appendTitle": function () {},
    "removeField": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "setCheck": function () {},
    "setAlign": function () {},
    "init": function () {},
    "dispose": function () {}
};
Blockly.ScrollbarPair.prototype = {
    "dispose": function () {},
    "resize": function () {},
    "set": function () {}
};
Blockly.Scrollbar.prototype = {
    "dispose": function () {},
    "resize": function () {},
    "createDom_": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "onMouseDownBar_": function () {},
    "onMouseDownKnob_": function () {},
    "onMouseMoveKnob_": function () {},
    "onMouseUpKnob_": function () {},
    "constrainKnob_": function () {},
    "onScroll_": function () {},
    "set": function () {}
};
Blockly.Trashcan.prototype = {
    "SPRITE_URL_": function () {},
    "LID_URL_": function () {},
    "WIDTH_": function () {},
    "BODY_HEIGHT_": function () {},
    "LID_HEIGHT_": function () {},
    "MARGIN_BOTTOM_": function () {},
    "MARGIN_SIDE_": function () {},
    "MARGIN_HOTSPOT_": function () {},
    "isOpen": function () {},
    "svgGroup_": function () {},
    "svgLid_": function () {},
    "lidTask_": function () {},
    "lidOpen_": function () {},
    "left_": function () {},
    "top_": function () {},
    "createDom": function () {},
    "init": function () {},
    "dispose": function () {},
    "position": function () {},
    "getRect": function () {},
    "setOpen_": function () {},
    "animateLid_": function () {},
    "close": function () {}
};
Blockly.WorkspaceSvg.prototype = {
    "constructor": function () {},
    "rendered": function () {},
    "isFlyout": function () {},
    "isScrolling": function () {},
    "scrollX": function () {},
    "scrollY": function () {},
    "trashcan": function () {},
    "scrollbar": function () {},
    "createDom": function () {},
    "dispose": function () {},
    "addTrashcan_": function () {},
    "addFlyout_": function () {},
    "resize": function () {},
    "getCanvas": function () {},
    "getBubbleCanvas": function () {},
    "translate": function () {},
    "addTopBlock": function () {},
    "removeTopBlock": function () {},
    "getWidth": function () {},
    "setVisible": function () {},
    "render": function () {},
    "traceOn": function () {},
    "highlightBlock": function () {},
    "fireChangeEvent": function () {},
    "paste": function () {},
    "recordDeleteAreas": function () {},
    "isDeleteArea": function () {},
    "onMouseDown_": function () {},
    "showContextMenu_": function () {},
    "loadAudio_": function () {},
    "preloadAudio_": function () {},
    "playAudio": function () {},
    "updateToolbox": function () {},
    "addChangeListener": function () {},
    "removeChangeListener": function () {},
    "markFocused": function () {},
    "getTopBlocks": function () {},
    "getAllBlocks": function () {},
    "clear": function () {},
    "getBlockById": function () {},
    "remainingCapacity": function () {}
};
Blockly.Mutator.prototype = {
    "constructor": function () {},
    "png_": function () {},
    "workspaceWidth_": function () {},
    "workspaceHeight_": function () {},
    "iconClick_": function () {},
    "createEditor_": function () {},
    "updateEditable": function () {},
    "resizeBubble_": function () {},
    "setVisible": function () {},
    "workspaceChanged_": function () {},
    "getFlyoutMetrics_": function () {},
    "dispose": function () {},
    "SIZE": function () {},
    "bubble_": function () {},
    "iconX_": function () {},
    "iconY_": function () {},
    "createIcon": function () {},
    "isVisible": function () {},
    "updateColour": function () {},
    "renderIcon": function () {},
    "setIconLocation": function () {},
    "computeIconLocation": function () {},
    "getIconLocation": function () {}
};
Blockly.Warning.prototype = {
    "constructor": function () {},
    "png_": function () {},
    "text_": function () {},
    "setVisible": function () {},
    "bodyFocus_": function () {},
    "setText": function () {},
    "dispose": function () {},
    "SIZE": function () {},
    "bubble_": function () {},
    "iconX_": function () {},
    "iconY_": function () {},
    "createIcon": function () {},
    "updateEditable": function () {},
    "isVisible": function () {},
    "iconClick_": function () {},
    "updateColour": function () {},
    "renderIcon": function () {},
    "setIconLocation": function () {},
    "computeIconLocation": function () {},
    "getIconLocation": function () {}
};
Blockly.Block.prototype = {
    "initialize": function () {},
    "fill": function () {},
    "dispose": function () {},
    "unplug": function () {},
    "duplicate_": function () {},
    "getConnections_": function () {},
    "bumpNeighbours_": function () {},
    "getParent": function () {},
    "getSurroundParent": function () {},
    "getNextBlock": function () {},
    "getRootBlock": function () {},
    "getChildren": function () {},
    "setParent": function () {},
    "getDescendants": function () {},
    "isDeletable": function () {},
    "setDeletable": function () {},
    "isMovable": function () {},
    "setMovable": function () {},
    "isEditable": function () {},
    "setEditable": function () {},
    "setConnectionsHidden": function () {},
    "setHelpUrl": function () {},
    "setTooltip": function () {},
    "getColour": function () {},
    "setColour": function () {},
    "getField": function () {},
    "getFieldValue": function () {},
    "getTitleValue": function () {},
    "setFieldValue": function () {},
    "setTitleValue": function () {},
    "setPreviousStatement": function () {},
    "setNextStatement": function () {},
    "setOutput": function () {},
    "changeOutput": function () {},
    "setInputsInline": function () {},
    "getInputsInline": function () {},
    "setDisabled": function () {},
    "getInheritedDisabled": function () {},
    "isCollapsed": function () {},
    "setCollapsed": function () {},
    "toString": function () {},
    "appendValueInput": function () {},
    "appendStatementInput": function () {},
    "appendDummyInput": function () {},
    "jsonInit": function () {},
    "interpolate_": function () {},
    "appendInput_": function () {},
    "moveInputBefore": function () {},
    "moveNumberedInputBefore": function () {},
    "removeInput": function () {},
    "getInput": function () {},
    "getInputTargetBlock": function () {},
    "getCommentText": function () {},
    "setCommentText": function () {},
    "setWarningText": function () {},
    "setMutator": function () {},
    "getRelativeToSurfaceXY": function () {},
    "moveBy": function () {}
};
Blockly.BlockSvg.prototype = {
    "constructor": function () {},
    "height": function () {},
    "width": function () {},
    "initSvg": function () {},
    "select": function () {},
    "unselect": function () {},
    "mutator": function () {},
    "comment": function () {},
    "warning": function () {},
    "getIcons": function () {},
    "setParent": function () {},
    "getRelativeToSurfaceXY": function () {},
    "moveBy": function () {},
    "snapToGrid_": function () {},
    "getHeightWidth": function () {},
    "setCollapsed": function () {},
    "onMouseDown_": function () {},
    "onMouseUp_": function () {},
    "showHelp_": function () {},
    "showContextMenu_": function () {},
    "moveConnections_": function () {},
    "setDragging_": function () {},
    "onMouseMove_": function () {},
    "updateMovable": function () {},
    "setMovable": function () {},
    "getSvgRoot": function () {},
    "dispose": function () {},
    "disposeUiEffect": function () {},
    "connectionUiEffect": function () {},
    "updateColour": function () {},
    "updateDisabled": function () {},
    "getCommentText": function () {},
    "setCommentText": function () {},
    "setWarningText": function () {},
    "setMutator": function () {},
    "setDisabled": function () {},
    "addSelect": function () {},
    "removeSelect": function () {},
    "addDragging": function () {},
    "removeDragging": function () {},
    "render": function () {},
    "renderFields_": function () {},
    "renderCompute_": function () {},
    "renderDraw_": function () {},
    "renderDrawTop_": function () {},
    "renderDrawRight_": function () {},
    "renderDrawBottom_": function () {},
    "renderDrawLeft_": function () {},
    "initialize": function () {},
    "fill": function () {},
    "unplug": function () {},
    "duplicate_": function () {},
    "getConnections_": function () {},
    "bumpNeighbours_": function () {},
    "getParent": function () {},
    "getSurroundParent": function () {},
    "getNextBlock": function () {},
    "getRootBlock": function () {},
    "getChildren": function () {},
    "getDescendants": function () {},
    "isDeletable": function () {},
    "setDeletable": function () {},
    "isMovable": function () {},
    "isEditable": function () {},
    "setEditable": function () {},
    "setConnectionsHidden": function () {},
    "setHelpUrl": function () {},
    "setTooltip": function () {},
    "getColour": function () {},
    "setColour": function () {},
    "getField": function () {},
    "getFieldValue": function () {},
    "getTitleValue": function () {},
    "setFieldValue": function () {},
    "setTitleValue": function () {},
    "setPreviousStatement": function () {},
    "setNextStatement": function () {},
    "setOutput": function () {},
    "changeOutput": function () {},
    "setInputsInline": function () {},
    "getInputsInline": function () {},
    "getInheritedDisabled": function () {},
    "isCollapsed": function () {},
    "toString": function () {},
    "appendValueInput": function () {},
    "appendStatementInput": function () {},
    "appendDummyInput": function () {},
    "jsonInit": function () {},
    "interpolate_": function () {},
    "appendInput_": function () {},
    "moveInputBefore": function () {},
    "moveNumberedInputBefore": function () {},
    "removeInput": function () {},
    "getInput": function () {},
    "getInputTargetBlock": function () {}
};
Blockly.FieldTextInput.prototype = {
    "constructor": function () {},
    "clone": function () {},
    "CURSOR": function () {},
    "spellcheck_": function () {},
    "dispose": function () {},
    "setText": function () {},
    "setSpellcheck": function () {},
    "showEditor_": function () {},
    "onHtmlInputKeyDown_": function () {},
    "onHtmlInputChange_": function () {},
    "validate_": function () {},
    "resizeEditor_": function () {},
    "widgetDispose_": function () {},
    "sourceBlock_": function () {},
    "visible_": function () {},
    "changeHandler_": function () {},
    "EDITABLE": function () {},
    "init": function () {},
    "updateEditable": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "setChangeHandler": function () {},
    "getSvgRoot": function () {},
    "render_": function () {},
    "getSize": function () {},
    "getText": function () {},
    "updateTextNode_": function () {},
    "getValue": function () {},
    "setValue": function () {},
    "onMouseUp_": function () {},
    "setTooltip": function () {},
    "getAbsoluteXY_": function () {}
};
Blockly.FieldAngle.prototype = {
    "constructor": function () {},
    "setChangeHandler": function () {},
    "clone": function () {},
    "dispose_": function () {},
    "showEditor_": function () {},
    "onMouseMove": function () {},
    "setText": function () {},
    "updateGraph_": function () {},
    "CURSOR": function () {},
    "spellcheck_": function () {},
    "dispose": function () {},
    "setSpellcheck": function () {},
    "onHtmlInputKeyDown_": function () {},
    "onHtmlInputChange_": function () {},
    "validate_": function () {},
    "resizeEditor_": function () {},
    "widgetDispose_": function () {},
    "sourceBlock_": function () {},
    "visible_": function () {},
    "changeHandler_": function () {},
    "EDITABLE": function () {},
    "init": function () {},
    "updateEditable": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "getSvgRoot": function () {},
    "render_": function () {},
    "getSize": function () {},
    "getText": function () {},
    "updateTextNode_": function () {},
    "getValue": function () {},
    "setValue": function () {},
    "onMouseUp_": function () {},
    "setTooltip": function () {},
    "getAbsoluteXY_": function () {}
};
Blockly.FieldCheckbox.prototype = {
    "constructor": function () {},
    "clone": function () {},
    "CURSOR": function () {},
    "init": function () {},
    "getValue": function () {},
    "setValue": function () {},
    "showEditor_": function () {},
    "sourceBlock_": function () {},
    "visible_": function () {},
    "changeHandler_": function () {},
    "EDITABLE": function () {},
    "dispose": function () {},
    "updateEditable": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "setChangeHandler": function () {},
    "getSvgRoot": function () {},
    "render_": function () {},
    "getSize": function () {},
    "getText": function () {},
    "setText": function () {},
    "updateTextNode_": function () {},
    "onMouseUp_": function () {},
    "setTooltip": function () {},
    "getAbsoluteXY_": function () {}
};
Blockly.FieldColour.prototype = {
    "constructor": function () {},
    "init": function () {},
    "clone": function () {},
    "CURSOR": function () {},
    "dispose": function () {},
    "getValue": function () {},
    "setValue": function () {},
    "getText": function () {},
    "setColours": function () {},
    "setColumns": function () {},
    "showEditor_": function () {},
    "sourceBlock_": function () {},
    "visible_": function () {},
    "changeHandler_": function () {},
    "EDITABLE": function () {},
    "updateEditable": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "setChangeHandler": function () {},
    "getSvgRoot": function () {},
    "render_": function () {},
    "getSize": function () {},
    "setText": function () {},
    "updateTextNode_": function () {},
    "onMouseUp_": function () {},
    "setTooltip": function () {},
    "getAbsoluteXY_": function () {}
};
Blockly.FieldDropdown.prototype = {
    "constructor": function () {},
    "clone": function () {},
    "CURSOR": function () {},
    "init": function () {},
    "showEditor_": function () {},
    "trimOptions_": function () {},
    "getOptions_": function () {},
    "getValue": function () {},
    "setValue": function () {},
    "setText": function () {},
    "dispose": function () {},
    "sourceBlock_": function () {},
    "visible_": function () {},
    "changeHandler_": function () {},
    "EDITABLE": function () {},
    "updateEditable": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "setChangeHandler": function () {},
    "getSvgRoot": function () {},
    "render_": function () {},
    "getSize": function () {},
    "getText": function () {},
    "updateTextNode_": function () {},
    "onMouseUp_": function () {},
    "setTooltip": function () {},
    "getAbsoluteXY_": function () {}
};
Blockly.FieldImage.prototype = {
    "constructor": function () {},
    "clone": function () {},
    "rectElement_": function () {},
    "EDITABLE": function () {},
    "init": function () {},
    "dispose": function () {},
    "setTooltip": function () {},
    "getValue": function () {},
    "setValue": function () {},
    "setText": function () {},
    "render_": function () {},
    "sourceBlock_": function () {},
    "visible_": function () {},
    "changeHandler_": function () {},
    "updateEditable": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "setChangeHandler": function () {},
    "getSvgRoot": function () {},
    "getSize": function () {},
    "getText": function () {},
    "updateTextNode_": function () {},
    "onMouseUp_": function () {},
    "getAbsoluteXY_": function () {}
};
Blockly.FieldVariable.prototype = {
    "constructor": function () {},
    "setChangeHandler": function () {},
    "init": function () {},
    "clone": function () {},
    "getValue": function () {},
    "setValue": function () {},
    "CURSOR": function () {},
    "showEditor_": function () {},
    "trimOptions_": function () {},
    "getOptions_": function () {},
    "setText": function () {},
    "dispose": function () {},
    "sourceBlock_": function () {},
    "visible_": function () {},
    "changeHandler_": function () {},
    "EDITABLE": function () {},
    "updateEditable": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "getSvgRoot": function () {},
    "render_": function () {},
    "getSize": function () {},
    "getText": function () {},
    "updateTextNode_": function () {},
    "onMouseUp_": function () {},
    "setTooltip": function () {},
    "getAbsoluteXY_": function () {}
};
Blockly.Generator.prototype = {
    "INFINITE_LOOP_TRAP": function () {},
    "STATEMENT_PREFIX": function () {},
    "workspaceToCode": function () {},
    "prefixLines": function () {},
    "allNestedComments": function () {},
    "blockToCode": function () {},
    "valueToCode": function () {},
    "statementToCode": function () {},
    "addLoopTrap": function () {},
    "INDENT": function () {},
    "addReservedWords": function () {},
    "FUNCTION_NAME_PLACEHOLDER_": function () {},
    "provideFunction_": function () {}
};
Blockly.Names.prototype = {
    "reset": function () {},
    "getName": function () {},
    "getDistinctName": function () {},
    "safeName_": function () {}
};
Blockly.Flyout.prototype = {
    "autoClose": function () {},
    "CORNER_RADIUS": function () {},
    "createDom": function () {},
    "init": function () {},
    "dispose": function () {},
    "getMetrics_": function () {},
    "setMetrics_": function () {},
    "position": function () {},
    "scrollToTop": function () {},
    "wheel_": function () {},
    "isVisible": function () {},
    "hide": function () {},
    "show": function () {},
    "reflow": function () {},
    "blockMouseDown_": function () {},
    "onMouseDown_": function () {},
    "onMouseMove_": function () {},
    "onMouseMoveBlock_": function () {},
    "createBlockFunc_": function () {},
    "filterForCapacity_": function () {},
    "getRect": function () {}
};
Blockly.Toolbox.prototype = {
    "width": function () {},
    "selectedOption_": function () {},
    "lastCategory_": function () {},
    "CONFIG_": function () {},
    "init": function () {},
    "dispose": function () {},
    "position": function () {},
    "populate_": function () {},
    "clearSelection": function () {},
    "getRect": function () {}
};
Blockly.Toolbox.TreeControl.prototype = {
    "constructor": function () {},
    "enterDocument": function () {},
    "handleTouchEvent_": function () {},
    "createNode": function () {},
    "setSelectedItem": function () {},
    "keyHandler_": function () {},
    "focusHandler_": function () {},
    "logger_": function () {},
    "focused_": function () {},
    "focusedNode_": function () {},
    "showLines_": function () {},
    "showExpandIcons_": function () {},
    "showRootNode_": function () {},
    "showRootLines_": function () {},
    "getTree": function () {},
    "getDepth": function () {},
    "reveal": function () {},
    "handleFocus_": function () {},
    "handleBlur_": function () {},
    "hasFocus": function () {},
    "getExpanded": function () {},
    "setExpanded": function () {},
    "getExpandIconSafeHtml": function () {},
    "getIconElement": function () {},
    "getExpandIconElement": function () {},
    "updateExpandIcon": function () {},
    "getRowClassName": function () {},
    "getCalculatedIconClass": function () {},
    "getSelectedItem": function () {},
    "setShowLines": function () {},
    "getShowLines": function () {},
    "updateLinesAndExpandIcons_": function () {},
    "setShowRootLines": function () {},
    "getShowRootLines": function () {},
    "setShowExpandIcons": function () {},
    "getShowExpandIcons": function () {},
    "setShowRootNode": function () {},
    "getShowRootNode": function () {},
    "initAccessibility": function () {},
    "exitDocument": function () {},
    "attachEvents_": function () {},
    "detachEvents_": function () {},
    "handleMouseEvent_": function () {},
    "handleKeyEvent": function () {},
    "getNodeFromEvent_": function () {},
    "setNode": function () {},
    "removeNode": function () {},
    "clearTypeAhead": function () {},
    "selected_": function () {},
    "expanded_": function () {},
    "toolTip_": function () {},
    "afterLabelHtml_": function () {},
    "isUserCollapsible_": function () {},
    "depth_": function () {},
    "disposeInternal": function () {},
    "createDom": function () {},
    "addChildAt": function () {},
    "add": function () {},
    "removeChild": function () {},
    "remove": function () {},
    "onTimeoutSelect_": function () {},
    "computeDepth_": function () {},
    "setDepth_": function () {},
    "contains": function () {},
    "getChildren": function () {},
    "getFirstChild": function () {},
    "getLastChild": function () {},
    "getPreviousSibling": function () {},
    "getNextSibling": function () {},
    "isLastSibling": function () {},
    "isSelected": function () {},
    "select": function () {},
    "deselect": function () {},
    "setSelectedInternal": function () {},
    "setExpandedInternal": function () {},
    "toggle": function () {},
    "expand": function () {},
    "collapse": function () {},
    "collapseChildren": function () {},
    "collapseAll": function () {},
    "expandChildren": function () {},
    "expandAll": function () {},
    "setIsUserCollapsible": function () {},
    "isUserCollapsible": function () {},
    "toSafeHtml": function () {},
    "getPixelIndent_": function () {},
    "getRowSafeHtml": function () {},
    "getLabelSafeHtml": function () {},
    "getAfterLabelHtml": function () {},
    "getAfterLabelSafeHtml": function () {},
    "setAfterLabelHtml": function () {},
    "setAfterLabelSafeHtml": function () {},
    "getIconSafeHtml": function () {},
    "getExpandIconClass": function () {},
    "getLineStyle": function () {},
    "getBackgroundPosition": function () {},
    "getElement": function () {},
    "getRowElement": function () {},
    "getLabelElement": function () {},
    "getAfterLabelElement": function () {},
    "getChildrenElement": function () {},
    "setIconClass": function () {},
    "getIconClass": function () {},
    "setExpandedIconClass": function () {},
    "getExpandedIconClass": function () {},
    "setText": function () {},
    "getText": function () {},
    "setHtml": function () {},
    "setSafeHtml": function () {},
    "getHtml": function () {},
    "getSafeHtml": function () {},
    "setToolTip": function () {},
    "getToolTip": function () {},
    "updateRow": function () {},
    "updateIcon_": function () {},
    "onMouseDown": function () {},
    "onClick_": function () {},
    "onDoubleClick_": function () {},
    "onKeyDown": function () {},
    "getLastShownDescendant": function () {},
    "getNextShownNode": function () {},
    "getPreviousShownNode": function () {},
    "getClientData": function () {},
    "setClientData": function () {},
    "getConfig": function () {},
    "setTreeInternal": function () {},
    "idGenerator_": function () {},
    "getId": function () {},
    "setId": function () {},
    "getElementStrict": function () {},
    "setElementInternal": function () {},
    "getElementsByClass": function () {},
    "getElementByClass": function () {},
    "getRequiredElementByClass": function () {},
    "getHandler": function () {},
    "setParent": function () {},
    "getParent": function () {},
    "setParentEventTarget": function () {},
    "getDomHelper": function () {},
    "isInDocument": function () {},
    "render": function () {},
    "renderBefore": function () {},
    "render_": function () {},
    "decorate": function () {},
    "canDecorate": function () {},
    "wasDecorated": function () {},
    "decorateInternal": function () {},
    "makeId": function () {},
    "makeIds": function () {},
    "getModel": function () {},
    "setModel": function () {},
    "getFragmentFromId": function () {},
    "getElementByFragment": function () {},
    "addChild": function () {},
    "getContentElement": function () {},
    "isRightToLeft": function () {},
    "setRightToLeft": function () {},
    "hasChildren": function () {},
    "getChildCount": function () {},
    "getChildIds": function () {},
    "getChild": function () {},
    "getChildAt": function () {},
    "forEachChild": function () {},
    "indexOfChild": function () {},
    "removeChildAt": function () {},
    "removeChildren": function () {},
    "closure_listenable_840095": function () {},
    "getParentEventTarget": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEvent": function () {},
    "listen": function () {},
    "listenOnce": function () {},
    "unlisten": function () {},
    "unlistenByKey": function () {},
    "removeAllListeners": function () {},
    "fireListeners": function () {},
    "getListeners": function () {},
    "getListener": function () {},
    "hasListener": function () {},
    "setTargetForTesting": function () {},
    "assertInitialized_": function () {},
    "disposed_": function () {},
    "isDisposed": function () {},
    "getDisposed": function () {},
    "dispose": function () {},
    "registerDisposable": function () {},
    "addOnDisposeCallback": function () {}
};
Blockly.Toolbox.TreeNode.prototype = {
    "constructor": function () {},
    "getExpandIconSafeHtml": function () {},
    "onMouseDown": function () {},
    "onDoubleClick_": function () {},
    "getTree": function () {},
    "getCalculatedIconClass": function () {},
    "selected_": function () {},
    "expanded_": function () {},
    "toolTip_": function () {},
    "afterLabelHtml_": function () {},
    "isUserCollapsible_": function () {},
    "depth_": function () {},
    "disposeInternal": function () {},
    "initAccessibility": function () {},
    "createDom": function () {},
    "enterDocument": function () {},
    "exitDocument": function () {},
    "addChildAt": function () {},
    "add": function () {},
    "removeChild": function () {},
    "remove": function () {},
    "onTimeoutSelect_": function () {},
    "getDepth": function () {},
    "computeDepth_": function () {},
    "setDepth_": function () {},
    "contains": function () {},
    "getChildren": function () {},
    "getFirstChild": function () {},
    "getLastChild": function () {},
    "getPreviousSibling": function () {},
    "getNextSibling": function () {},
    "isLastSibling": function () {},
    "isSelected": function () {},
    "select": function () {},
    "deselect": function () {},
    "setSelectedInternal": function () {},
    "getExpanded": function () {},
    "setExpandedInternal": function () {},
    "setExpanded": function () {},
    "toggle": function () {},
    "expand": function () {},
    "collapse": function () {},
    "collapseChildren": function () {},
    "collapseAll": function () {},
    "expandChildren": function () {},
    "expandAll": function () {},
    "reveal": function () {},
    "setIsUserCollapsible": function () {},
    "isUserCollapsible": function () {},
    "toSafeHtml": function () {},
    "getPixelIndent_": function () {},
    "getRowSafeHtml": function () {},
    "getRowClassName": function () {},
    "getLabelSafeHtml": function () {},
    "getAfterLabelHtml": function () {},
    "getAfterLabelSafeHtml": function () {},
    "setAfterLabelHtml": function () {},
    "setAfterLabelSafeHtml": function () {},
    "getIconSafeHtml": function () {},
    "getExpandIconClass": function () {},
    "getLineStyle": function () {},
    "getBackgroundPosition": function () {},
    "getElement": function () {},
    "getRowElement": function () {},
    "getExpandIconElement": function () {},
    "getIconElement": function () {},
    "getLabelElement": function () {},
    "getAfterLabelElement": function () {},
    "getChildrenElement": function () {},
    "setIconClass": function () {},
    "getIconClass": function () {},
    "setExpandedIconClass": function () {},
    "getExpandedIconClass": function () {},
    "setText": function () {},
    "getText": function () {},
    "setHtml": function () {},
    "setSafeHtml": function () {},
    "getHtml": function () {},
    "getSafeHtml": function () {},
    "setToolTip": function () {},
    "getToolTip": function () {},
    "updateRow": function () {},
    "updateExpandIcon": function () {},
    "updateIcon_": function () {},
    "onClick_": function () {},
    "onKeyDown": function () {},
    "getLastShownDescendant": function () {},
    "getNextShownNode": function () {},
    "getPreviousShownNode": function () {},
    "getClientData": function () {},
    "setClientData": function () {},
    "getConfig": function () {},
    "setTreeInternal": function () {},
    "idGenerator_": function () {},
    "getId": function () {},
    "setId": function () {},
    "getElementStrict": function () {},
    "setElementInternal": function () {},
    "getElementsByClass": function () {},
    "getElementByClass": function () {},
    "getRequiredElementByClass": function () {},
    "getHandler": function () {},
    "setParent": function () {},
    "getParent": function () {},
    "setParentEventTarget": function () {},
    "getDomHelper": function () {},
    "isInDocument": function () {},
    "render": function () {},
    "renderBefore": function () {},
    "render_": function () {},
    "decorate": function () {},
    "canDecorate": function () {},
    "wasDecorated": function () {},
    "decorateInternal": function () {},
    "makeId": function () {},
    "makeIds": function () {},
    "getModel": function () {},
    "setModel": function () {},
    "getFragmentFromId": function () {},
    "getElementByFragment": function () {},
    "addChild": function () {},
    "getContentElement": function () {},
    "isRightToLeft": function () {},
    "setRightToLeft": function () {},
    "hasChildren": function () {},
    "getChildCount": function () {},
    "getChildIds": function () {},
    "getChild": function () {},
    "getChildAt": function () {},
    "forEachChild": function () {},
    "indexOfChild": function () {},
    "removeChildAt": function () {},
    "removeChildren": function () {},
    "closure_listenable_840095": function () {},
    "getParentEventTarget": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEvent": function () {},
    "listen": function () {},
    "listenOnce": function () {},
    "unlisten": function () {},
    "unlistenByKey": function () {},
    "removeAllListeners": function () {},
    "fireListeners": function () {},
    "getListeners": function () {},
    "getListener": function () {},
    "hasListener": function () {},
    "setTargetForTesting": function () {},
    "assertInitialized_": function () {},
    "disposed_": function () {},
    "isDisposed": function () {},
    "getDisposed": function () {},
    "dispose": function () {},
    "registerDisposable": function () {},
    "addOnDisposeCallback": function () {}
};
Blockly.Toolbox.TreeSeparator.prototype = {
    "constructor": function () {},
    "getExpandIconSafeHtml": function () {},
    "onMouseDown": function () {},
    "onDoubleClick_": function () {},
    "getTree": function () {},
    "getCalculatedIconClass": function () {},
    "selected_": function () {},
    "expanded_": function () {},
    "toolTip_": function () {},
    "afterLabelHtml_": function () {},
    "isUserCollapsible_": function () {},
    "depth_": function () {},
    "disposeInternal": function () {},
    "initAccessibility": function () {},
    "createDom": function () {},
    "enterDocument": function () {},
    "exitDocument": function () {},
    "addChildAt": function () {},
    "add": function () {},
    "removeChild": function () {},
    "remove": function () {},
    "onTimeoutSelect_": function () {},
    "getDepth": function () {},
    "computeDepth_": function () {},
    "setDepth_": function () {},
    "contains": function () {},
    "getChildren": function () {},
    "getFirstChild": function () {},
    "getLastChild": function () {},
    "getPreviousSibling": function () {},
    "getNextSibling": function () {},
    "isLastSibling": function () {},
    "isSelected": function () {},
    "select": function () {},
    "deselect": function () {},
    "setSelectedInternal": function () {},
    "getExpanded": function () {},
    "setExpandedInternal": function () {},
    "setExpanded": function () {},
    "toggle": function () {},
    "expand": function () {},
    "collapse": function () {},
    "collapseChildren": function () {},
    "collapseAll": function () {},
    "expandChildren": function () {},
    "expandAll": function () {},
    "reveal": function () {},
    "setIsUserCollapsible": function () {},
    "isUserCollapsible": function () {},
    "toSafeHtml": function () {},
    "getPixelIndent_": function () {},
    "getRowSafeHtml": function () {},
    "getRowClassName": function () {},
    "getLabelSafeHtml": function () {},
    "getAfterLabelHtml": function () {},
    "getAfterLabelSafeHtml": function () {},
    "setAfterLabelHtml": function () {},
    "setAfterLabelSafeHtml": function () {},
    "getIconSafeHtml": function () {},
    "getExpandIconClass": function () {},
    "getLineStyle": function () {},
    "getBackgroundPosition": function () {},
    "getElement": function () {},
    "getRowElement": function () {},
    "getExpandIconElement": function () {},
    "getIconElement": function () {},
    "getLabelElement": function () {},
    "getAfterLabelElement": function () {},
    "getChildrenElement": function () {},
    "setIconClass": function () {},
    "getIconClass": function () {},
    "setExpandedIconClass": function () {},
    "getExpandedIconClass": function () {},
    "setText": function () {},
    "getText": function () {},
    "setHtml": function () {},
    "setSafeHtml": function () {},
    "getHtml": function () {},
    "getSafeHtml": function () {},
    "setToolTip": function () {},
    "getToolTip": function () {},
    "updateRow": function () {},
    "updateExpandIcon": function () {},
    "updateIcon_": function () {},
    "onClick_": function () {},
    "onKeyDown": function () {},
    "getLastShownDescendant": function () {},
    "getNextShownNode": function () {},
    "getPreviousShownNode": function () {},
    "getClientData": function () {},
    "setClientData": function () {},
    "getConfig": function () {},
    "setTreeInternal": function () {},
    "idGenerator_": function () {},
    "getId": function () {},
    "setId": function () {},
    "getElementStrict": function () {},
    "setElementInternal": function () {},
    "getElementsByClass": function () {},
    "getElementByClass": function () {},
    "getRequiredElementByClass": function () {},
    "getHandler": function () {},
    "setParent": function () {},
    "getParent": function () {},
    "setParentEventTarget": function () {},
    "getDomHelper": function () {},
    "isInDocument": function () {},
    "render": function () {},
    "renderBefore": function () {},
    "render_": function () {},
    "decorate": function () {},
    "canDecorate": function () {},
    "wasDecorated": function () {},
    "decorateInternal": function () {},
    "makeId": function () {},
    "makeIds": function () {},
    "getModel": function () {},
    "setModel": function () {},
    "getFragmentFromId": function () {},
    "getElementByFragment": function () {},
    "addChild": function () {},
    "getContentElement": function () {},
    "isRightToLeft": function () {},
    "setRightToLeft": function () {},
    "hasChildren": function () {},
    "getChildCount": function () {},
    "getChildIds": function () {},
    "getChild": function () {},
    "getChildAt": function () {},
    "forEachChild": function () {},
    "indexOfChild": function () {},
    "removeChildAt": function () {},
    "removeChildren": function () {},
    "closure_listenable_840095": function () {},
    "getParentEventTarget": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEvent": function () {},
    "listen": function () {},
    "listenOnce": function () {},
    "unlisten": function () {},
    "unlistenByKey": function () {},
    "removeAllListeners": function () {},
    "fireListeners": function () {},
    "getListeners": function () {},
    "getListener": function () {},
    "hasListener": function () {},
    "setTargetForTesting": function () {},
    "assertInitialized_": function () {},
    "disposed_": function () {},
    "isDisposed": function () {},
    "getDisposed": function () {},
    "dispose": function () {},
    "registerDisposable": function () {},
    "addOnDisposeCallback": function () {}
};
